"""Lingo change

Revision ID: 11cea14fbfa3
Revises: 56d3b97959b7
Create Date: 2015-06-17 12:31:06.947857

"""

# revision identifiers, used by Alembic.
revision = '11cea14fbfa3'
down_revision = '56d3b97959b7'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mindset',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('kind', sa.String(length=16), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['identity.id'], name='fk_author_id', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('percept',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('kind', sa.String(length=32), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(length=128), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mindset_vesicles',
    sa.Column('mindset_id', sa.String(length=32), nullable=True),
    sa.Column('vesicle_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['mindset_id'], ['mindset.id'], ),
    sa.ForeignKeyConstraint(['vesicle_id'], ['vesicle.id'], )
    )
    op.create_table('link_percept',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['percept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag_percept',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('tag_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['percept.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('percept_vesicles',
    sa.Column('percept_id', sa.String(length=32), nullable=True),
    sa.Column('vesicle_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['percept_id'], ['percept.id'], ),
    sa.ForeignKeyConstraint(['vesicle_id'], ['vesicle.id'], )
    )
    op.create_table('picture_percept',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('filename', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['percept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_percept',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['percept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('linked_picture_percept',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['percept.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('thought',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('kind', sa.String(length=32), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.String(length=32), nullable=True),
    sa.Column('context_length', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.String(length=32), nullable=True),
    sa.Column('mindset_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['identity.id'], ),
    sa.ForeignKeyConstraint(['mindset_id'], ['mindset.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['thought.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('percept_association',
    sa.Column('thought_id', sa.String(length=32), nullable=False),
    sa.Column('percept_id', sa.String(length=32), nullable=False),
    sa.Column('author_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['persona.id'], ),
    sa.ForeignKeyConstraint(['percept_id'], ['percept.id'], ),
    sa.ForeignKeyConstraint(['thought_id'], ['thought.id'], ),
    sa.PrimaryKeyConstraint('thought_id', 'percept_id')
    )
    op.create_table('thought_vesicles',
    sa.Column('thought_id', sa.String(length=32), nullable=True),
    sa.Column('vesicle_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['thought_id'], ['thought.id'], ),
    sa.ForeignKeyConstraint(['vesicle_id'], ['vesicle.id'], )
    )
    op.drop_table('star_vesicles')
    op.drop_table('starmap_vesicles')
    op.drop_table('text_planet')
    op.drop_table('planet_association')
    op.drop_table('starmap')
    op.drop_table('planet')
    op.drop_table('linked_picture_planet')
    op.drop_table('star')
    op.drop_table('link_planet')
    op.drop_table('tag_planet')
    op.drop_table('picture_planet')
    op.drop_table('planet_vesicles')
    op.drop_constraint(u'identity_blog_id_fkey', 'identity', type_='foreignkey')
    op.drop_constraint(u'identity_mindspace_id_fkey', 'identity', type_='foreignkey')
    op.create_foreign_key(None, 'identity', 'mindset', ['mindspace_id'], ['id'])
    op.create_foreign_key(None, 'identity', 'mindset', ['blog_id'], ['id'])
    op.drop_constraint(u'mention_id_fkey', 'mention', type_='foreignkey')
    op.create_foreign_key(None, 'mention', 'percept', ['id'], ['id'])
    op.drop_constraint(u'persona_index_id_fkey', 'persona', type_='foreignkey')
    op.create_foreign_key(None, 'persona', 'mindset', ['index_id'], ['id'])
    op.add_column('souma', sa.Column('mindset_id', sa.String(length=32), nullable=True))
    op.drop_constraint(u'souma_starmap_id_fkey', 'souma', type_='foreignkey')
    op.create_foreign_key(None, 'souma', 'mindset', ['mindset_id'], ['id'])
    op.drop_column('souma', 'starmap_id')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('souma', sa.Column('starmap_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'souma', type_='foreignkey')
    op.create_foreign_key(u'souma_starmap_id_fkey', 'souma', 'starmap', ['starmap_id'], ['id'])
    op.drop_column('souma', 'mindset_id')
    op.drop_constraint(None, 'persona', type_='foreignkey')
    op.create_foreign_key(u'persona_index_id_fkey', 'persona', 'starmap', ['index_id'], ['id'])
    op.drop_constraint(None, 'mention', type_='foreignkey')
    op.create_foreign_key(u'mention_id_fkey', 'mention', 'planet', ['id'], ['id'])
    op.drop_constraint(None, 'identity', type_='foreignkey')
    op.drop_constraint(None, 'identity', type_='foreignkey')
    op.create_foreign_key(u'identity_mindspace_id_fkey', 'identity', 'starmap', ['mindspace_id'], ['id'])
    op.create_foreign_key(u'identity_blog_id_fkey', 'identity', 'starmap', ['blog_id'], ['id'])
    op.create_table('planet_vesicles',
    sa.Column('planet_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('vesicle_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['planet_id'], [u'planet.id'], name=u'planet_vesicles_planet_id_fkey'),
    sa.ForeignKeyConstraint(['vesicle_id'], [u'vesicle.id'], name=u'planet_vesicles_vesicle_id_fkey')
    )
    op.create_table('picture_planet',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('filename', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], [u'planet.id'], name=u'picture_planet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'picture_planet_pkey')
    )
    op.create_table('tag_planet',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], [u'planet.id'], name=u'tag_planet_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], [u'tag.id'], name=u'tag_planet_tag_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'tag_planet_pkey')
    )
    op.create_table('link_planet',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], [u'planet.id'], name=u'link_planet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'link_planet_pkey')
    )
    op.create_table('star',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('kind', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('state', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('context_length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('starmap_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'identity.id'], name=u'star_author_id_fkey'),
    sa.ForeignKeyConstraint(['parent_id'], [u'star.id'], name=u'star_parent_id_fkey'),
    sa.ForeignKeyConstraint(['starmap_id'], [u'starmap.id'], name=u'star_starmap_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'star_pkey')
    )
    op.create_table('linked_picture_planet',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], [u'planet.id'], name=u'linked_picture_planet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'linked_picture_planet_pkey')
    )
    op.create_table('planet',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('kind', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('state', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'planet_pkey')
    )
    op.create_table('starmap',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('kind', sa.VARCHAR(length=16), autoincrement=False, nullable=True),
    sa.Column('state', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'identity.id'], name=u'fk_author_id'),
    sa.PrimaryKeyConstraint('id', name=u'starmap_pkey')
    )
    op.create_table('planet_association',
    sa.Column('star_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('planet_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'persona.id'], name=u'planet_association_author_id_fkey'),
    sa.ForeignKeyConstraint(['planet_id'], [u'planet.id'], name=u'planet_association_planet_id_fkey'),
    sa.ForeignKeyConstraint(['star_id'], [u'star.id'], name=u'planet_association_star_id_fkey'),
    sa.PrimaryKeyConstraint('star_id', 'planet_id', name=u'planet_association_pkey')
    )
    op.create_table('text_planet',
    sa.Column('id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id'], [u'planet.id'], name=u'text_planet_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'text_planet_pkey')
    )
    op.create_table('starmap_vesicles',
    sa.Column('starmap_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('vesicle_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['starmap_id'], [u'starmap.id'], name=u'starmap_vesicles_starmap_id_fkey'),
    sa.ForeignKeyConstraint(['vesicle_id'], [u'vesicle.id'], name=u'starmap_vesicles_vesicle_id_fkey')
    )
    op.create_table('star_vesicles',
    sa.Column('star_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('vesicle_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['star_id'], [u'star.id'], name=u'star_vesicles_star_id_fkey'),
    sa.ForeignKeyConstraint(['vesicle_id'], [u'vesicle.id'], name=u'star_vesicles_vesicle_id_fkey')
    )
    op.drop_table('thought_vesicles')
    op.drop_table('percept_association')
    op.drop_table('thought')
    op.drop_table('linked_picture_percept')
    op.drop_table('text_percept')
    op.drop_table('picture_percept')
    op.drop_table('percept_vesicles')
    op.drop_table('tag_percept')
    op.drop_table('link_percept')
    op.drop_table('mindset_vesicles')
    op.drop_table('percept')
    op.drop_table('mindset')
    ### end Alembic commands ###
